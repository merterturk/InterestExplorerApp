@{
    ViewBag.Title = "CategoryList";
}
@using PagedList;
@using PagedList.Mvc;
@using InterestExplorerApp.Entities.DTOs;
@model IPagedList<BookShortDetailsDTO>
<link href="~/Content/PagedList.css" rel="stylesheet" />
<style>
    .myselect {
        width: 450px;
        background-image: linear-gradient(90deg,#ff55a5 0%, #ff5860 100%);
    }
</style>
<section class="section section--first section--bg" data-bg="/Content/img/section/section.jpg">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="section__wrap">
                    <!-- section title -->
                    <h2 class="section__title">@TempData["BookCategory"] Kitapları</h2>
                    <!-- end section title -->
                    <!-- breadcrumb -->
                    <!-- end breadcrumb -->
                </div>
            </div>
        </div>
    </div>
</section>
@if (Model.Count == 0)
{
    <div class="alert alert-danger mt-3">Bu kategori için henüz kitap eklenmemiştir</div>
}
else
{
<div class="filter">
    <div class="container">
        <div class="row">
            <div class="col-12">
                @using (Html.BeginForm("BookList", "Book", FormMethod.Get, new { @class = "filter__content" }))
                {
                    <div class="filter__item" id="filter__genre">
                        <span class="filter__item-label">Filtrele:</span>
                        <input type="hidden" name="categoryId" value="@Request.QueryString["categoryId"]" />
                        @Html.DropDownList("filter", (List<SelectListItem>)ViewBag.Data, new { @class = "myselect btn btn-dark" })
                    </div>
                    <!-- end filter item -->
                    <!-- filter item -->
                    <!-- end filter item -->
                    <!-- filter item -->

                    <button class="filter__btn" type="submit" id="btn">Filtrele</button>

                    <!-- filter btn -->

                    <!-- end filter btn -->
                }
            </div>
        </div>
    </div>
</div>
<!-- end filter -->
<!-- catalog -->
<div class="catalog">
    <div class="container">
        <div class="row">
            <!-- card -->
            @foreach (var item in Model)
            {
                <div class="col-6 col-sm-4 col-lg-3 col-xl-2">
                    <div class="card">
                        <div class="card__cover">
                            <img src="@item.ImageURL" width="200" height="230" alt="">
                            <a href="BookDetail/@item.Id" class="card__play">
                                <i class="icon ion-ios-play"></i>
                            </a>
                        </div>
                        <div class="card__content">
                            <h3 class="card__title">@item.BookName</h3>
                            <span class="card__category">
                                <a>@item.CategoryName</a>

                            </span>
                        </div>
                    </div>
                </div>
            }
            <!-- end card -->
            <!-- paginator -->
            <div class="col-12">
                @Html.PagedListPager((IPagedList)Model, page => Url.Action("BookList",
         new { categoryId = Request.QueryString["categoryId"], page }), new PagedListRenderOptions
         {
             DisplayLinkToFirstPage = PagedListDisplayMode.Never,
             DisplayLinkToLastPage = PagedListDisplayMode.Never,
             DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
             DisplayLinkToNextPage = PagedListDisplayMode.Always,
             MaximumPageNumbersToDisplay = 4
         })
                )
            </div>
            <!-- end paginator -->
        </div>
    </div>
</div>
}


